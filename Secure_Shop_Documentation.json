{
	"info": {
		"_postman_id": "993d0cec-9e78-47fc-9580-ec06c35fd2da",
		"name": "Final Project",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "28549318"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "Register",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"test3@test.com\",\r\n    \"first_name\": \"dave\",\r\n    \"last_name\": \"smolov\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseURL}}/api/v1/register/",
						"description": "Register to the app.\n\nNotice that after a user is created it first has to be aprooved by an admin before you can go ahead and log into it.\n\nRequierments:\n\nEmail - Has to be unique, and properly formated.\n\nfirst_name - string\n\nlast_name - string\n\npassword - has to be an 8 long string, containing number, letter, capital letter and special case letter."
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Set 'access' parameter as collection variable\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.collectionVariables.set(\"access_token\", jsonData.access);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"test3@test.com\",\r\n    \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseURL}}/api/v1/login/",
						"description": "Login function to receive a jwt for the app itself.\n\nThere is no indication if the password is wrong or the email is wrong. It is done so, so no attacker can enumerate which users exist in the app and which dont."
					},
					"response": []
				},
				{
					"name": "Reset Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"email\":\"devidinini@gmail.com\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseURL}}/api/v1/reset-password/"
					},
					"response": []
				},
				{
					"name": "Reset Password Confirm",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"email\":\"devidinini@gmail.com\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/v1/reset-password-confirm/?token=XIS9JLLH99YPUACKK89J",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"v1",
								"reset-password-confirm",
								""
							],
							"query": [
								{
									"key": "token",
									"value": "XIS9JLLH99YPUACKK89J"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"token\":\"XIS9JLLH99YPUACKK89J\",\"new_password\":\"{{$randomPassword}}\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/v1/reset-password-confirm/",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"v1",
								"reset-password-confirm",
								""
							],
							"query": [
								{
									"key": "token",
									"value": "TVXWW3IGMYGGYKOF38T5",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Product",
			"item": [
				{
					"name": "View Products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": "{{baseURL}}/api/v1/product/",
						"description": "A request to view all products in the app.\n\nnotice that this is the only function that is excempt from being authorized."
					},
					"response": []
				},
				{
					"name": "View Product",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/api/v1/product/?id=1",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"v1",
								"product",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								}
							]
						},
						"description": "Request to view information of a single product.\n\nid - a positive integer"
					},
					"response": []
				},
				{
					"name": "Create Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomProduct}}\",\r\n    \"price\": \"{{$randomPrice}}\",\r\n    \"description\": \"{{$randomLoremSentence}}\",\r\n    \"stock\": \"200\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseURL}}/api/v1/product/",
						"description": "Request to create a new product in the db.\n\nNotice the following:\n\nname - has to be a unique string\n\nprice - a positive decimal field\n\ndescription - a string\n\nstick - a positive integer"
					},
					"response": []
				},
				{
					"name": "Update Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    if (pm.response.code === 400) {\r",
									"        var responseJSON = pm.response.json();\r",
									"        for (var key in responseJSON.error) {\r",
									"            console.log(responseJSON.error[key]);\r",
									"        }\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"ttttttt\",\r\n    \"price\": \"14.7\",\r\n    \"descrption\": \"Something Important to Look at\",\r\n    \"stock\": \"200\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/v1/product/?id=1",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"v1",
								"product",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								}
							]
						},
						"description": "Request to partially update an existing product.\n\nid - the id of the product to update\n\nname (optional) - update name field\n\nprice (optional) - update price field\n\ndescription (optional) - update description field\n\nstock (optional) - update stock field"
					},
					"response": []
				},
				{
					"name": "Delete Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}/api/v1/product/?id=1",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"v1",
								"product",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								}
							]
						},
						"description": "Request to delete an existing product from the db.\n\nrequierments:\n\nid - positive integer"
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": {
					"token": "{{access_token}}"
				}
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Cart",
			"item": [
				{
					"name": "View Cart",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{baseURL}}/api/v1/cart/",
						"description": "Request to View your current existing cart"
					},
					"response": []
				},
				{
					"name": "Create Cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cart_items\": [\r\n        {\r\n            \"product\": 3,\r\n            \"quantity\": 2\r\n        },\r\n        {\r\n            \"product\": 4,\r\n            \"quantity\": 3\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseURL}}/api/v1/cart/",
						"description": "Request to create a new Cart.\n\ncart_items: is an array containing cart items:\n\nproduct: the product's pk\n\nquantity: a positive number, not exceeding the product's stock.\n\nThe array can be as long as the user wants"
					},
					"response": []
				},
				{
					"name": "Create Cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cart_items\": [\r\n        {\r\n            \"product\": 3,\r\n            \"quantity\": 2\r\n        },\r\n        {\r\n            \"product\": 4,\r\n            \"quantity\": 3\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseURL}}/api/v1/cart/",
						"description": "A request to change the content of an already existing cart.\n\ncart_items: an array\n\nproduct: the product's pkl\n\nquantity: the quantity of the product, not exceeding the stock amount.\n\nThe array can be have as many items as the user wants"
					},
					"response": []
				},
				{
					"name": "Delete Cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseURL}}/api/v1/cart/",
						"description": "A request to simply delete the user's cart"
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": {
					"token": "{{access_token}}"
				}
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Supervisor",
			"item": [
				{
					"name": "Activate User",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"email\":\"test3@test.com\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseURL}}/api/v1/supervisor/ActivateUser/",
						"description": "a request to activate a disabled user after signing up\n\nCan only be done by a supervisor user"
					},
					"response": []
				},
				{
					"name": "Deactivate User",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"email\":\"test3@test.com\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseURL}}/api/v1/supervisor/ActivateUser/",
						"description": "a request to deactivate an active user\n\nCan only be done by a supervisor user"
					},
					"response": []
				},
				{
					"name": "Promote To Seller",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"email\":\"test2@test.com\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseURL}}/api/v1/supervisor/PromoteToSeller/",
						"description": "a request a user to become a seller, and thus being able to edit products.\n\nemail - an existing user email\n\nCan only be done by a supervisor user"
					},
					"response": []
				},
				{
					"name": "Demote From Seller",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"email\":\"test@test.com\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseURL}}/api/v1/supervisor/PromoteToSeller/",
						"description": "A request to demote a seller back to a regular user only capable of purchasing items\n\nemail - an existing seller user\n\nCan only be done by a supervisor user"
					},
					"response": []
				},
				{
					"name": "Promote To Supervisor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"email\":\"test@test.com\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseURL}}/api/v1/supervisor/PromoteToSupervisor/",
						"description": "A request to promote a user to a Supervisor,\n\nA supervisor can edit other users.\n\nEmail - an existing user's email\n\nCan only be done by a supervisor user"
					},
					"response": []
				},
				{
					"name": "Demote From Supervisor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"email\":\"test@test.com\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseURL}}/api/v1/supervisor/PromoteToSupervisor/",
						"description": "A request to demote a supervisor back to a regular user\n\nemail - an existing supervisor email\n\nCan only be done by a supervisor user"
					},
					"response": []
				},
				{
					"name": "Purchase History",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{baseURL}}/api/v1/supervisor/PurchasedCart/",
						"description": "A request to view all purchases that were completed.\n\nCan only be done by a supervisor user"
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": {
					"token": "{{access_token}}"
				}
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Paypal",
			"item": [
				{
					"name": "Paypal",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseURL}}/api/v1/paypal/payment/",
						"description": "A request to create a payment link.\n\nCan only be done by a user with a cart."
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": {
					"token": "{{access_token}}"
				}
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": {
			"token": "{{access_token}}"
		}
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "https://test.teragymtech.com/",
			"type": "string"
		},
		{
			"key": "password",
			"value": "",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": ""
		}
	]
}